{"version":3,"file":"static/js/519.46f28627.chunk.js","mappings":"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","sources":["api/theMoviedAPI.js","components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx","pages/MoviesPageDetails/MoviesPageDetails.styled.js","pages/MoviesPageDetails/MoviesPageDetails.jsx","utils/checkImg.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5257856f789bada50296aabdc3a8b8f3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingDay = async () => {\n  const data = await axios(\n    `/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getSearchQuery = async (query) => {\n  const data = await axios(`/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`);\n  return data;\n};\n\nexport const getMoviesDetails = async (id) => {\n  const data = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCats = async (id) => {\n  const data = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async (id) => {\n  const data = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsWrapper = styled.div``;\n\nexport const Details = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\n\nexport const DetailsTitle = styled.h1`\n  padding-top: 20px;\n  font-size: 45px;\n  margin-bottom: 130px;\n`;\n\nexport const DetailsInfo = styled.div`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const DetailsInfoBord = styled.span`\n  font-size: 20px;\n  font-weight: 700;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const AdditionalWrapper = styled.div`\n  border-top: 1px solid #333;\n  padding: 10px;\n`;\n\nexport const AdditionalTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const AdditionalList = styled.div`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  padding: 8px 22px;\n  background-color: #fff;\n  border-radius: 10px;\n  border: 1px solid #5d5d5d;\n  color: #5d5d5d;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #4f4f4f;\n    border: 1px solid #4f4f4f;\n    color: #fff;\n  }\n  &.active {\n    background-color: #4f4f4f;\n    border: 1px solid #4f4f4f;\n    color: #fff;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { checkImg } from 'utils/checkImg';\nimport {\n  DetailsWrapper,\n  Details,\n  DetailsTitle,\n  DetailsInfo,\n  DetailsInfoBord,\n  AdditionalWrapper,\n  AdditionalTitle,\n  AdditionalList,\n  AdditionalLink,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = ({ details }) => {\n  const {\n    title,\n    original_name,\n    overview,\n    poster_path,\n    backdrop_path,\n    vote_average,\n    genres,\n  } = details;\n\n  const rootBg = document.querySelector('body');\n  rootBg.style.backgroundImage = `url(https://image.tmdb.org/t/p/original/${backdrop_path})`;\n  rootBg.style.backgroundSize = 'cover';\n  rootBg.style.backgroundRepeat = 'no-repeat';\n  rootBg.style.backgroundAttachment = 'fixed';\n\n  return (\n    <DetailsWrapper>\n      <Details>\n        <img\n          src={`${checkImg(poster_path)}`}\n          alt={title}\n          width={'400px'}\n          height={'600px'}\n        />\n        <div>\n          <DetailsTitle>{title ? title : original_name}</DetailsTitle>\n          <DetailsInfo>\n            Overview: <DetailsInfoBord>{overview}</DetailsInfoBord>\n          </DetailsInfo>\n          <DetailsInfo>\n            User score:{' '}\n            <DetailsInfoBord>{Math.round(vote_average * 10)}%</DetailsInfoBord>\n          </DetailsInfo>\n          <DetailsInfo>\n            Genres:{' '}\n            <DetailsInfoBord>\n              {genres &&\n                genres.map(item => {\n                  return <p key={item.id}>{item.name}</p>;\n                })}\n            </DetailsInfoBord>\n          </DetailsInfo>\n        </div>\n      </Details>\n\n      <AdditionalWrapper>\n        <AdditionalTitle>Additional information</AdditionalTitle>\n        <AdditionalList>\n          <AdditionalLink to={'cast'}>Cast</AdditionalLink>\n\n          <AdditionalLink to={'reviews'}>Reviers</AdditionalLink>\n        </AdditionalList>\n        <Outlet />\n      </AdditionalWrapper>\n    </DetailsWrapper>\n  );\n};\n\nexport default MoviesDetails;\n","import styled from \"styled-components\";\n\nexport const GoBeckBtn = styled.button`\n padding: 8px 22px;\n  background-color: #fff;\n  border-radius: 10px;\n  border: 1px solid #5d5d5d;\n  color: #5d5d5d;\n  margin-left: auto;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n \n  &:hover {\n    background-color: #4f4f4f;\n    border: 1px solid #4f4f4f;\n    color: #fff;\n  }\n`\n\nexport const WrapperBtn = styled.div`\ndisplay: flex;\njustify-content: left;\n`","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { getMoviesDetails } from 'api/theMoviedAPI';\nimport MoviesDetails from 'components/MoviesDetails/MoviesDetails';\nimport { GoBeckBtn, WrapperBtn } from './MoviesPageDetails.styled';\n\nconst MoviesPageDetails = () => {\n  const { movId } = useParams();\n  const [details, setDetails] = useState([]);\n  const [error, setError] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        Loading.dots({ svgSize: '250px' });\n        setError(null);\n        const data = await getMoviesDetails(movId);\n        setDetails(data.data);\n      } catch (error) {\n        setError(error);\n        console.error(error);\n      } finally {\n        Loading.remove();\n      }\n    };\n\n    getMovies();\n  }, [movId]);\n\n  const onGoBack = () => {\n    navigate(location.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      <WrapperBtn><GoBeckBtn onClick={onGoBack}>Go back</GoBeckBtn></WrapperBtn>\n      {details && <MoviesDetails details={details} />}\n      {error && <h2>error: {error}</h2>}\n    </>\n  );\n};\n\nexport default MoviesPageDetails;\n"," import NoImg from '../images/noImg.jpg'\n \n export const checkImg = img =>\n`${img ? `https://image.tmdb.org/t/p/original/${img}` : `${NoImg}`}`;"],"names":["API_KEY","axios","getTrendingDay","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","getSearchQuery","_ref2","_callee2","query","_context2","_x","getMoviesDetails","_ref3","_callee3","id","_context3","_x2","getMoviesCats","_ref4","_callee4","_context4","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","DetailsWrapper","styled","_templateObject","_taggedTemplateLiteral","Details","_templateObject2","DetailsTitle","_templateObject3","DetailsInfo","_templateObject4","DetailsInfoBord","_templateObject5","AdditionalWrapper","_templateObject6","AdditionalTitle","_templateObject7","AdditionalList","_templateObject8","AdditionalLink","NavLink","_templateObject9","details","title","original_name","overview","poster_path","backdrop_path","vote_average","genres","rootBg","document","querySelector","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundAttachment","_jsxs","children","_jsx","src","checkImg","alt","width","height","Math","round","map","item","name","to","Outlet","GoBeckBtn","WrapperBtn","movId","useParams","_useState","useState","_useState2","_slicedToArray","setDetails","_useState3","_useState4","error","setError","navigate","useNavigate","location","useLocation","useEffect","getMovies","Loading","svgSize","t0","console","finish","_Fragment","onClick","_location$state$from","_location$state","state","from","MoviesDetails","img","NoImg"],"sourceRoot":""}